pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>%
group_by(Transect)
#add column containing phylum info
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+cota"), "Incertae sedis")) %>%
#Merge columns
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
#Reformat dataframe
Fungi <- as.data.frame(Fungi) %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+cota"), "Incertae sedis")) %>%
group_by(Phylum)
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>%
group_by(Transect)
Fungi <- as.data.frame(Fungi) %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+cota"), "Incertae sedis")) %>%
group_by(Phylum)
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count")
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
#Reformat dataframe
Fungi <- as.data.frame(Fungi) %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+cota"), "Incertae sedis")) %>%
group_by(Phylum)
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
#Reformat dataframe
Fungi <- as.data.frame(Fungi) %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+cota"), "Incertae sedis")) %>%
group_by(Phylum)
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count")
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylumn = replace_na(str_extract(X, "[:alpha:]+ota"), "Incertae sedis")) %>%
# filter out Incertae sedis?
group_by(Phylum) %>%
mutate(OTU_Number = row_number()) %>%
ungroup() %>%
pivot_longer(cols = 1:7, names_to = "Transect", values_to = "Count") %>%
group_by(Transect) %>%
top_n(wt = Count, n = 10) %>%
mutate(OTU_Name = paste0(Family, "_", OTU_Number)) %>%
arrange(desc(Count)) %>%
group_by(Transect) %>%
mutate(level_order = row_number()) %>%
group_by(Transect)
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota"), "Incertae sedis")) %>%
# filter out Incertae sedis?
group_by(Phylum) %>%
mutate(OTU_Number = row_number()) %>%
ungroup() %>%
pivot_longer(cols = 1:7, names_to = "Transect", values_to = "Count") %>%
group_by(Transect) %>%
top_n(wt = Count, n = 10) %>%
mutate(OTU_Name = paste0(Family, "_", OTU_Number)) %>%
arrange(desc(Count)) %>%
group_by(Transect) %>%
mutate(level_order = row_number()) %>%
group_by(Transect)
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota"), "Incertae sedis")) %>%
# filter out Incertae sedis?
group_by(Phylum) %>%
mutate(OTU_Number = row_number()) %>%
ungroup() %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>%
group_by(Transect) %>%
top_n(wt = Count, n = 10) %>%
mutate(OTU_Name = paste0(Family, "_", OTU_Number)) %>%
arrange(desc(Count)) %>%
group_by(Transect) %>%
mutate(level_order = row_number()) %>%
group_by(Transect)
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota"), "Incertae sedis")) %>%
# filter out Incertae sedis?
group_by(Phylum) %>%
mutate(OTU_Number = row_number()) %>%
ungroup() %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>%
group_by(Transect)
View(Fungi)
#Import fungi by transect
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota"), "Incertae sedis")) %>%
# filter out Incertae sedis?
group_by(Phylum) %>%
ungroup() %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>%
group_by(Transect)
#Import fungi by transect
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
View(Fungi)
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota"), "Incertae sedis")) %>%
# filter out Incertae sedis?
group_by(Phylum) %>%
ungroup() %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>%
group_by(Transect)
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota"), "Incertae sedis")) %>%
ungroup() %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>%
group_by(Transect)
?group_by
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota"), "Incertae sedis")) %>%
# filter out Incertae sedis?
group_by(Phylum) %>%
ungroup() %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>%
group_by(Transect)
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota"), "Incertae sedis")) %>%
# filter out Incertae sedis?
group_by(Phylum) %>%
ungroup() %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>%
group_by(Transect)
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota"), "Incertae sedis")) %>%
# filter out Incertae sedis?
group_by(Phylum) %>%
ungroup() %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>%
group_by(Transect)
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota"), "Incertae sedis"))  %>%
ungroup() %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>%
group_by(Transect, Phylum)
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota"), "Incertae sedis"))  %>%
ungroup() %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>%
group_by(Transect, Phylum)
Fungi <- Fungi %>% group_by(Phylum)
Fungi <- Fungi %>% group_by(Trasect)
Fungi <- Fungi %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>% group_by(Trasect)
ungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota"), "Incertae sedis")) %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>% group_by(Trasect)
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota"), "Incertae sedis")) %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>% group_by(Trasect)
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota"), "Incertae sedis")) %>%ungroup() %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>% group_by(Trasect)
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota"), "Incertae sedis"))  %>%
# filter out Incertae sedis?
group_by(Phylum) %>%
ungroup() %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>%
group_by(Transect, Phylum)
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota"), "Incertae sedis")) %>% ungroup() %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>% group_by(Trasect)
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota"), "Incertae sedis"))  %>%
ungroup() %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>%
group_by(Transect, Phylum)
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota"), "Incertae sedis"))  %>%
# filter out Incertae sedis?
group_by(Phylum) %>%
ungroup() %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>%
group_by(Transect, Phylum)
Fungi1 <- Fungi %>% group_by(Transect)
View(Fungi1)
Fungi1 <- Fungi %>% filter(Transect=='Forest')
View(Fungi1)
Fungi1 <- Fungi %>% group_by(Transect)
Fungi1 <- Fungi %>% group_by('Transect')
Fungi1 <- Fungi %>% group_by('Transect')
Fungi1 <- Fungi %>% group_by('Transect')
Fungi1 <- Fungi %>% group_by('Transect')
Fungi1 <- Fungi %>% group_by(X)
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota"), "Incertae sedis"))  %>%
# filter out Incertae sedis?
group_by(Phylum) %>%
ungroup() %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>%
mutate(Test = c("A", "B, ,"C"))
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota"), "Incertae sedis"))  %>%
# filter out Incertae sedis?
group_by(Phylum) %>%
ungroup() %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>%
mutate(Test = c("A", "B, ,"C")
Fungi1 <- Fungi %>% filter(Transect==c'Forest' & "Forest_Edge_Interior"& "Forest_Edge_Exterior")
Fungi1 <- Fungi %>% filter(Transect=='Forest' & "Forest_Edge_Interior"& "Forest_Edge_Exterior")
Fungi1 <- Fungi %>% filter(Transect=='Forest' & Transect=="Forest_Edge_Interior" & Transect=="Forest_Edge_Exterior")
ungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota"), "Incertae sedis"))  %>%
# filter out Incertae sedis?
group_by(Phylum) %>%
ungroup() %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count")
View(ungi)
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota"), "Incertae sedis"))  %>%
# filter out Incertae sedis?
group_by(Phylum) %>%
ungroup() %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count")
Fungi1 <- Fungi %>% filter(Transect=='Forest' & Transect=="Forest_Edge_Interior" & Transect=="Forest_Edge_Exterior")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota"), "Incertae sedis"))  %>%
# filter out Incertae sedis?
group_by(Phylum) %>%
ungroup() %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>%
Fungi1 <- Fungi %>% filter(Transect=='Forest') %>%
ggplot(data = Ecto) +
geom_bar(aes(x = level_order, y = Count_Transformed, fill = Family), stat = "identity") +
facet_wrap(~ factor(Habitat, levels = c(
"Grass_Near", "Grass_Far", "Pioneer_Near", "Pioneer_Far", "Forest_Edge_Interior", "Forest_Edge_Exterior", "Forest")),
scales="free_x", ncol = 2) +
theme_classic() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), strip.background = element_blank()) +
labs(x = "", y = "log(Abundance)") + scale_fill_manual(values = my_colours)
Fungi1 <- Fungi %>% filter(Transect=='Forest')
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota"), "Incertae sedis"))  %>%
# filter out Incertae sedis?
group_by(Phylum) %>%
ungroup() %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>%
Fungi1 <- Fungi %>% filter(Transect=='Forest'& Transect=="Forest_Edge_Interior" & Transect=="Forest_Edge_Exterior") %>%
ggplot(data = Ecto) +
geom_bar(aes(x = level_order, y = Count_Transformed, fill = Family), stat = "identity") +
facet_wrap(~ factor(Habitat, levels = c(
"Grass_Near", "Grass_Far", "Pioneer_Near", "Pioneer_Far", "Forest_Edge_Interior", "Forest_Edge_Exterior", "Forest")),
scales="free_x", ncol = 2) +
theme_classic() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), strip.background = element_blank()) +
labs(x = "", y = "log(Abundance)") + scale_fill_manual(values = my_colours)
Fungi1 <- Fungi %>% filter(Transect=='Forest'& Transect=="Forest_Edge_Interior" & Transect=="Forest_Edge_Exterior")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota"), "Incertae sedis"))  %>%
# filter out Incertae sedis?
group_by(Phylum) %>%
ungroup() %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>%
Fungi1 <- Fungi %>% filter(Transect=='Forest'& Transect=="Forest_Edge_Interior") %>%
ggplot(data = Ecto) +
geom_bar(aes(x = level_order, y = Count_Transformed, fill = Family), stat = "identity") +
facet_wrap(~ factor(Habitat, levels = c(
"Grass_Near", "Grass_Far", "Pioneer_Near", "Pioneer_Far", "Forest_Edge_Interior", "Forest_Edge_Exterior", "Forest")),
scales="free_x", ncol = 2) +
theme_classic() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), strip.background = element_blank()) +
labs(x = "", y = "log(Abundance)") + scale_fill_manual(values = my_colours)
Fungi1 <- Fungi %>% filter(Transect=='Forest'& Transect=="Forest_Edge_Interior")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota"), "Incertae sedis"))  %>%
# filter out Incertae sedis?
group_by(Phylum) %>%
ungroup() %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>%
Fungi1 <- Fungi %>% filter(Transect=='Forest'& Transect=="Forest_Edge_Interior") %>%
ggplot(data = Ecto) +
geom_bar(aes(x = level_order, y = Count_Transformed, fill = Family), stat = "identity") +
facet_wrap(~ factor(Habitat, levels = c(
"Grass_Near", "Grass_Far", "Pioneer_Near", "Pioneer_Far", "Forest_Edge_Interior", "Forest_Edge_Exterior", "Forest")),
scales="free_x", ncol = 2) +
theme_classic() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), strip.background = element_blank()) +
labs(x = "", y = "log(Abundance)") + scale_fill_manual(values = my_colours)
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota"), "Incertae sedis"))  %>%
# filter out Incertae sedis?
group_by(Phylum) %>%
ungroup() %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count")
Fungi1 <- Fungi %>% filter(Transect=='Forest'& Transect=="Forest_Edge_Interior")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota"), "Incertae sedis"))  %>%
# filter out Incertae sedis?
group_by(Phylum) %>%
ungroup() %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>%
Fungi1 <- Fungi %>% filter(Transect=='Forest'& Transect=="Forest_Edge_Interior") %>%
Fungi2 <- Fungi %>% group_by(Transect)
Fungi2 <- Fungi %>% group_by(Transect)
View(Fungi2)
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota"), "Incertae sedis"))  %>%
# filter out Incertae sedis?
group_by(Phylum) %>%
ungroup()
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota"), "Incertae sedis"))  %>%
# filter out Incertae sedis?
group_by(Phylum) %>%
ungroup()
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota"), "Incertae sedis"))  %>%
# filter out Incertae sedis?
group_by(Phylum) %>%
ungroup()
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota"), "Incertae sedis"))  %>%
# filter out Incertae sedis?
group_by(Phylum) %>%
ungroup() %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota"), "Incertae sedis"))  %>%
# filter out Incertae sedis?
group_by(Phylum) %>%
ungroup()
rm(list=ls())
#First three lines are to fix recurring error in mac
library(showtext)
font_add(family = "Arial", regular = "Arial.ttf") ## here is the path to the font to add.
showtext.auto()
library(ggplot2)
library(tidyverse)
library(dplyr)
library(cowplot)
library(Polychrome)
library(stringr)
plot(c(1,2,3) ~ c(9,4,2))
#Summarise the proportion of each phylum per transect
rm(list=ls())
library(tidyverse)
library(stringr)
library(dplyr)
#Import fungi by transect
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota"), "Incertae sedis"))  %>%
# filter out Incertae sedis?
group_by(Phylum) %>%
ungroup() %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>%
group_by(Transect, Phylum)
#Ash playing
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota"), "Incertae sedis"))  %>%
# filter out Incertae sedis?
group_by(Phylum) %>%
ungroup() %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>%
Fungi1 <- Fungi %>% filter(Transect=='Forest'& Transect=="Forest_Edge_Interior") %>%
Fungi2 <- Fungi %>% group_by(Transect)
View(Fungi)
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota")))  %>%
# filter out Incertae sedis?
group_by(Phylum) %>%
ungroup() %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>%
group_by(Transect, Phylum)
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota")))  %>%
# filter out Incertae sedis?
group_by(Phylum) %>%
ungroup() %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>%
group_by(Transect)
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota")))  %>%
# filter out Incertae sedis?
group_by(Phylum) %>%
ungroup() %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count")
#Import fungi by transect
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota")))  %>%
# filter out Incertae sedis?
group_by(Phylum) %>%
ungroup() %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count")
View(Fungi)
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota")))  %>%
# filter out Incertae sedis?
group_by(Phylum) %>%
ungroup() %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>%
group_by(Transect)
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota")))  %>%
# filter out Incertae sedis?
group_by(Phylum) %>%
ungroup() %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>%
group_by(Transect)
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota")))
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>%
group_by(Transect)
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota")))  %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>%
group_by(Transect)
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota")))  %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>%
group_by("Transect")
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota")))  %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>%
group_by("Transect")
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota")))  %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>%
group_by("Transect")
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota")))  %>%
pivot_longer(cols = 2:9, names_to = Transect , values_to = "Count") %>%
group_by("Transect")
library(tidyverse)
library(stringr)
library(dplyr)
?group_by
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota")))  %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>%
group_by(Fungi$Transect)
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota")))  %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>%
# filter out Incertae sedis?
group_by(Phylum) %>%
ungroup() %>%
Fungi1 <- Fungi %>% group_by(Transect)
View(Fungi)
#First three lines are to fix recurring error in mac
library(showtext)
font_add(family = "Arial", regular = "Arial.ttf") ## here is the path to the font to add.
showtext.auto()
library(biom) #we need this package to read and manipulate BIOM objects
library(dplyr)
library(vegan)
library(tidyverse)
library(ggplot2)
library(FUNGuildR)#this package assigns functional groups to taxa
rm(list=ls())
library(tidyverse)
library(stringr)
library(dplyr)
#Import fungi by transect
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota")))  %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>%
# filter out Incertae sedis?
group_by(Phylum) %>%
ungroup() %>%
Fungi1 <- Fungi %>% group_by(Transect)
View(Fungi)
Fungi <- read.csv("Cleaned Up Data/Fungi_by_Transect.csv")
Fungi <- Fungi %>%
mutate(Phylum = replace_na(str_extract(X, "[:alpha:]+ota")))  %>%
pivot_longer(cols = 2:9, names_to = "Transect", values_to = "Count") %>%
# filter out Incertae sedis?
group_by(Phylum) %>%
ungroup()
Fungi1 <- Fungi %>% group_by(Transect)
View(Fungi1)
Fungi1 <- Fungi %>% group_by(X)
View(Fungi1)
Fungi1 <- Fungi %>% group_by(Count)
Fungi1 <- as.data.frame(Fungi) %>% group_by(Count)
Fungi1 <- as.data.frame(Fungi) %>% group_by(Fungi$Transect)
View(Fungi1)
Fungi1 <- as.data.frame(Fungi) %>% group_by(Transect)
View(Fungi1)
Fungi1 <- tibble(Fungi) %>% group_by(Transect)
