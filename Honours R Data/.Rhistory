summary(Saprobe_LITTER)
#Assess the proportion of variance explained by Explanatory Variable
r.squaredGLMM(Saprobe_LITTER)
#Create new dataframe that stores LITTER_COMP1 in 100 even units from smallest to lowest values
Saprobe_LITTER_Predict<-data.frame(int = 1, x = seq_func(Guilds_Environment$LITTER_COMP1))
#Create a new predictive model from this data and our previous model
LITTER_Predict_Saprobe<-lmer.predict(mod = Saprobe_LITTER, newdat=Saprobe_LITTER_Predict , se.mult=1.96, binom=F, poisson=F)
#Plot SR against LITTER
with(Guilds_Environment, plot(Rel_Saprobe_Abundance ~ LITTER_COMP1, col=my_colours[factor(Transect)], pch = 16, ylab = "Relative Saprobe Abundance", xlab = "LITTER COMP 1"))
#Endo
Endo_LITTER <- lmer(Rel_Endomycorrhizae_Abundance ~ LITTER_COMP1 + (1|Transect), data = Guilds_Environment)
#Plot Residuals
plot(simulateResiduals(Endo_LITTER))
#Call Model Summary
summary(Endo_LITTER)
#Assess the proportion of variance explained by Explatory Variable
r.squaredGLMM(Endo_LITTER)
#Create new dataframe that stores LITTER in 100 even units from smallest to lowest values
Endo_LITTER_Predict<-data.frame(int = 1, x = seq_func(Guilds_Environment$LITTER_COMP1))
#Create a new predictive model from this data and our previous model
LITTER_Predict_Endo<-lmer.predict(mod = Endo_LITTER, newdat=Endo_LITTER_Predict , se.mult=1.96, binom=F, poisson=F)
#Plot SR against LITTER
#Ecto
Ecto_LITTER <- lmer(Rel_Ectomycorrhizae_Abundance ~ LITTER_COMP1 + (1|Transect), data = Guilds_Environment)
#Check Residuals
plot(simulateResiduals(Ecto_LITTER))
#Call Model Summary
summary(Ecto_LITTER)
#Assess the proportion of variance explained by Exploratory Variable
r.squaredGLMM(Ecto_LITTER)
#Create new dataframe that stores LITTER in 100 even units from smallest to lowest values
Ecto_LITTER_Predict<-data.frame(int = 1, x = seq_func(Guilds_Environment$LITTER_COMP1))
#Create a new predictive model from this data and our previous model
LITTER_Predict_Ecto<-lmer.predict(mod = Ecto_LITTER, newdat=Ecto_LITTER_Predict , se.mult=1.96, binom=F, poisson=F)
#Path
Path_LITTER <- lmer(Rel_Plant_Pathogen_Abundance ~ LITTER_COMP1 + (1|Transect), data = Guilds_Environment)
#Check Residuals
plot(simulateResiduals(Path_LITTER))
#Call Model Summary
summary(Path_LITTER)
#Assess the proportion of variance explained by Exploratory Variable
r.squaredGLMM(Path_LITTER)
#Create new dataframe that stores LITTER in 100 even units from smallest to lowest values
Path_LITTER_Predict<-data.frame(int = 1, x = seq_func(Guilds_Environment$LITTER_COMP1))
#Create a new predictive model from this data and our previous model
LITTER_Predict_Path<-lmer.predict(mod = Path_LITTER, newdat=Path_LITTER_Predict , se.mult=1.96, binom=F, poisson=F)
#Repeat for ABIOTIC_1
#Saprobes
Saprobe_ABIOTIC1 <- lmer(Rel_Saprobe_Abundance ~ ABIOTIC_COMP1 + (1|Transect), data = Guilds_Environment)
#check residuals
plot(simulateResiduals(Saprobe_ABIOTIC1))
#Call Model Summary
summary(Saprobe_ABIOTIC1)
#Assess the proportion of variance explained by Explanatory Variable
r.squaredGLMM(Saprobe_ABIOTIC1)
#Create new dataframe that stores ABIOTIC_COMP1 in 100 even units from smallest to lowest values
Saprobe_ABIOTIC1_Predict<-data.frame(int = 1, x = seq_func(Guilds_Environment$ABIOTIC_COMP1))
#Create a new predictive model from this data and our previous model
ABIOTIC_Predict_Saprobe<-lmer.predict(mod = Saprobe_ABIOTIC1, newdat=Saprobe_ABIOTIC1_Predict , se.mult=1.96, binom=F, poisson=F)
with(Guilds_Environment, plot(Rel_Saprobe_Abundance ~ ABIOTIC_COMP1, col=my_colours[factor(Transect)], pch = 16, ylab = ("Relative Saprobe Abundance"), xlab = "ABIOTIC COMP 1"))
#Plot our mixed effects model with confidence estimates
plot.CI.func(x.for.plot = seq_func(Guilds_Environment$ABIOTIC_COMP1), pred = ABIOTIC_Predict_Saprobe$y,
upper = ABIOTIC_Predict_Saprobe$phi, lower=ABIOTIC_Predict_Saprobe$plo,
env.colour = "grey", env.trans=50, line.colour="black", line.weight=2, line.type=1)
legend("right", legend = c("Forest", "Forest Edge Interior", "Forest Edge Exterior", "Pioneer Near", "Pioneer Far", "Grass Near", "Grass Far"),
col = c("#009E73", "#E69500", "#D55E00", "#56B4E9", "#0072B2", "#CC6677", "#AA4499"), pch = 16, bty = "n",  cex = 0.8, inset = c(-0.357,0), xpd = TRUE)
#Endo
Endo_ABIOTIC1 <- lmer(Rel_Endomycorrhizae_Abundance ~ ABIOTIC_COMP1 + (1|Transect), data = Guilds_Environment)
#Plot Residuals
plot(simulateResiduals(Endo_ABIOTIC1))
#Call Model Summary
summary(Endo_ABIOTIC1)
#Assess the proportion of variance explained by Explatory Variable
r.squaredGLMM(Endo_ABIOTIC1)
#Create new dataframe that stores ABIOTIC in 100 even units from smallest to lowest values
Endo_ABIOTIC1_Predict<-data.frame(int = 1, x = seq_func(Guilds_Environment$ABIOTIC_COMP1))
#Create a new predictive model from this data and our previous model
ABIOTIC_Predict_Endo<-lmer.predict(mod = Endo_ABIOTIC1, newdat=Endo_ABIOTIC1_Predict , se.mult=1.96, binom=F, poisson=F)
#Plot SR against ABIOTIC
#Ecto
Ecto_ABIOTIC1 <- lmer(Rel_Ectomycorrhizae_Abundance ~ ABIOTIC_COMP1 + (1|Transect), data = Guilds_Environment)
#Check Residuals
plot(simulateResiduals(Ecto_ABIOTIC1))
#Call Model Summary
summary(Ecto_ABIOTIC1)
#Assess the proportion of variance explained by Exploratory Variable
r.squaredGLMM(Ecto_ABIOTIC1)
#Create new dataframe that stores ABIOTIC in 100 even units from smallest to lowest values
Ecto_ABIOTIC1_Predict<-data.frame(int = 1, x = seq_func(Guilds_Environment$ABIOTIC_COMP1))
#Create a new predictive model from this data and our previous model
ABIOTIC_Predict_Ecto<-lmer.predict(mod = Ecto_ABIOTIC1, newdat=Ecto_ABIOTIC1_Predict , se.mult=1.96, binom=F, poisson=F)
#Plot SR against ABIOTIC
#Path
Path_ABIOTIC1 <- lmer(Rel_Plant_Pathogen_Abundance ~ ABIOTIC_COMP1 + (1|Transect), data = Guilds_Environment)
#Check Residuals
plot(simulateResiduals(Path_ABIOTIC1))
#Call Model Summary
summary(Path_ABIOTIC1)
#Assess the proportion of variance explained by Exploratory Variable
r.squaredGLMM(Path_ABIOTIC1)
#Create new dataframe that stores ABIOTIC in 100 even units from smallest to lowest values
Path_ABIOTIC1_Predict<-data.frame(int = 1, x = seq_func(Guilds_Environment$ABIOTIC_COMP1))
#Create a new predictive model from this data and our previous model
ABIOTIC_Predict_Path<-lmer.predict(mod = Path_ABIOTIC1, newdat=Path_ABIOTIC1_Predict , se.mult=1.96, binom=F, poisson=F)
#Repeat for ABIOTIC_2
#Model the relative abundance of each guild against ABIOTIC_COMP2  the lmer function from package lme4
#Saprobes
Saprobe_ABIOTIC2 <- lmer(Rel_Saprobe_Abundance ~ ABIOTIC_COMP2 + (1|Transect), data = Guilds_Environment)
#check residuals
plot(simulateResiduals(Saprobe_ABIOTIC2))
#Call Model Summary
summary(Saprobe_ABIOTIC2)
#Assess the proportion of variance explained by Explanatory Variable
r.squaredGLMM(Saprobe_ABIOTIC2)
#Create new dataframe that stores ABIOTIC_COMP2 in 100 even units from smallest to lowest values
Saprobe_ABIOTIC2_Predict<-data.frame(int = 1, x = seq_func(Guilds_Environment$ABIOTIC_COMP2))
#Create a new predictive model from this data and our previous model
ABIOTIC_Predict_Saprobe<-lmer.predict(mod = Saprobe_ABIOTIC2, newdat=Saprobe_ABIOTIC2_Predict , se.mult=1.96, binom=F, poisson=F)
#Plot SR against ABIOTIC
with(Guilds_Environment, plot(Rel_Saprobe_Abundance ~ ABIOTIC_COMP2, col=my_colours[factor(Transect)], pch = 16, ylab = ("Relative Saprobe Abundance"), xlab = "ABIOTIC COMP 1"))
#Endo
Endo_ABIOTIC2 <- lmer(Rel_Endomycorrhizae_Abundance ~ ABIOTIC_COMP2 + (1|Transect), data = Guilds_Environment)
#Plot Residuals
plot(simulateResiduals(Endo_ABIOTIC2))
#Call Model Summary
summary(Endo_ABIOTIC2)
#Assess the proportion of variance explained by Explatory Variable
r.squaredGLMM(Endo_ABIOTIC2)
#Create new dataframe that stores ABIOTIC in 100 even units from smallest to lowest values
Endo_ABIOTIC2_Predict<-data.frame(int = 1, x = seq_func(Guilds_Environment$ABIOTIC_COMP2))
#Create a new predictive model from this data and our previous model
ABIOTIC_Predict_Endo<-lmer.predict(mod = Endo_ABIOTIC2, newdat=Endo_ABIOTIC2_Predict , se.mult=1.96, binom=F, poisson=F)
#Plot SR against ABIOTIC
#Ecto
Ecto_ABIOTIC2 <- lmer(Rel_Ectomycorrhizae_Abundance ~ ABIOTIC_COMP2 + (1|Transect), data = Guilds_Environment)
#Check Residuals
plot(simulateResiduals(Ecto_ABIOTIC2))
#Call Model Summary
summary(Ecto_ABIOTIC2)
#Assess the proportion of variance explained by Exploratory Variable
r.squaredGLMM(Ecto_ABIOTIC2)
#Create new dataframe that stores ABIOTIC in 100 even units from smallest to lowest values
Ecto_ABIOTIC2_Predict<-data.frame(int = 1, x = seq_func(Guilds_Environment$ABIOTIC_COMP2))
#Create a new predictive model from this data and our previous model
ABIOTIC_Predict_Ecto<-lmer.predict(mod = Ecto_ABIOTIC2, newdat=Ecto_ABIOTIC2_Predict , se.mult=1.96, binom=F, poisson=F)
#Path
Path_ABIOTIC2 <- lmer(Rel_Plant_Pathogen_Abundance ~ ABIOTIC_COMP2 + (1|Transect), data = Guilds_Environment)
#Check Residuals
plot(simulateResiduals(Path_ABIOTIC2))
#Call Model Summary
summary(Path_ABIOTIC2)
#Assess the proportion of variance explained by Exploratory Variable
r.squaredGLMM(Path_ABIOTIC2)
#Create new dataframe that stores ABIOTIC in 100 even units from smallest to lowest values
Path_ABIOTIC2_Predict<-data.frame(int = 1, x = seq_func(Guilds_Environment$ABIOTIC_COMP2))
#Create a new predictive model from this data and our previous model
ABIOTIC_Predict_Path<-lmer.predict(mod = Path_ABIOTIC2, newdat=Path_ABIOTIC2_Predict , se.mult=1.96, binom=F, poisson=F)
#Plot Figues and save to pdf
#Saprobes
pdf(file = "Outputs/Figures/Saprobe_Environment.pdf")
par(mar = c(5.1,4.5,4.5,8.1))
with(Guilds_Environment, plot(Rel_Saprobe_Abundance ~ Transformed_Distance, col=my_colours[factor(Transect)], pch = 16, ylab = "Relative Saprobe Abundance", xlab = "Transformed Distance From Forest Edge (m)"))
#Plot our mixed effects model with confidence estimates
plot.CI.func(x.for.plot = seq_func(Guilds_Environment$Transformed_Distance), pred = Distance_Predict_Saprobe$y,
upper = Distance_Predict_Saprobe$phi, lower=Distance_Predict_Saprobe$plo,
env.colour = "grey", env.trans=50, line.colour="black", line.weight=2, line.type=1)
legend("right", legend = c("Forest", "Forest Edge Interior", "Forest Edge Exterior", "Pioneer Near", "Pioneer Far", "Grass Near", "Grass Far"),
col = c("#009E73", "#E69500", "#D55E00", "#56B4E9", "#0072B2", "#CC6677", "#AA4499"), pch = 16, bty = "n", cex = 0.8, inset = c(-0.3535,0), xpd = TRUE)
with(Guilds_Environment, plot(Rel_Saprobe_Abundance ~ AGV_COMP1, col=my_colours[factor(Transect)], pch = 16, ylab = "Relative Saprobe Abundance", xlab = "AGV COMP 1"))
#Plot our mixed effects model with confidence estimates
plot.CI.func(x.for.plot = seq_func(Guilds_Environment$AGV_COMP1), pred = AGV_Predict_Saprobe$y,
upper = AGV_Predict_Saprobe$phi, lower=AGV_Predict_Saprobe$plo,
env.colour = "grey", env.trans=50, line.colour="black", line.weight=2, line.type=1)
legend("right", legend = c("Forest", "Forest Edge Interior", "Forest Edge Exterior", "Pioneer Near", "Pioneer Far", "Grass Near", "Grass Far"),
col = c("#009E73", "#E69500", "#D55E00", "#56B4E9", "#0072B2", "#CC6677", "#AA4499"), pch = 16, bty = "n",  cex = 0.8, inset = c(-0.357,0), xpd = TRUE)
with(Guilds_Environment, plot(Rel_Saprobe_Abundance ~ SOIL_COMP1, col=my_colours[factor(Transect)], pch = 16, ylab = "Relative Saprobe Abundance", xlab = "SOIL COMP 1"))
#
#Plot our mixed effects model with confidence estimates
plot.CI.func(x.for.plot = seq_func(Guilds_Environment$SOIL_COMP1), pred = SOIL_Predict_Saprobe$y,
upper = SOIL_Predict_Saprobe$phi, lower=SOIL_Predict_Saprobe$plo,
env.colour = "grey", env.trans=50, line.colour="black", line.weight=2, line.type=1)
legend("right", legend = c("Forest", "Forest Edge Interior", "Forest Edge Exterior", "Pioneer Near", "Pioneer Far", "Grass Near", "Grass Far"),
col = c("#009E73", "#E69500", "#D55E00", "#56B4E9", "#0072B2", "#CC6677", "#AA4499"), pch = 16, bty = "n",  cex = 0.8, inset = c(-0.357,0), xpd = TRUE)
with(Guilds_Environment, plot(Rel_Saprobe_Abundance ~ LITTER_COMP1, col=my_colours[factor(Transect)], pch = 16, ylab = "Relative Saprobe Abundance", xlab = "LITTER COMP 1"))
#Plot our mixed effects model with confidence estimates
plot.CI.func(x.for.plot = seq_func(Guilds_Environment$LITTER_COMP1), pred = LITTER_Predict_Saprobe$y,
upper = LITTER_Predict_Saprobe$phi, lower=LITTER_Predict_Saprobe$plo,
env.colour = "grey", env.trans=50, line.colour="black", line.weight=2, line.type=1)
legend("right", legend = c("Forest", "Forest Edge Interior", "Forest Edge Exterior", "Pioneer Near", "Pioneer Far", "Grass Near", "Grass Far"),
col = c("#009E73", "#E69500", "#D55E00", "#56B4E9", "#0072B2", "#CC6677", "#AA4499"), pch = 16, bty = "n",  cex = 0.8, inset = c(-0.357,0), xpd = TRUE)
with(Guilds_Environment, plot(Rel_Saprobe_Abundance ~ ABIOTIC_COMP1, col=my_colours[factor(Transect)], pch = 16, ylab = "Relative Saprobe Abundance", xlab = "ABIOTIC COMP 1"))
#Plot our mixed effects model with confidence estimates
plot.CI.func(x.for.plot = seq_func(Guilds_Environment$ABIOTIC_COMP1), pred = ABIOTIC_Predict_Saprobe$y,
upper = ABIOTIC_Predict_Saprobe$phi, lower=ABIOTIC_Predict_Saprobe$plo,
env.colour = "grey", env.trans=50, line.colour="black", line.weight=2, line.type=1)
legend("right", legend = c("Forest", "Forest Edge Interior", "Forest Edge Exterior", "Pioneer Near", "Pioneer Far", "Grass Near", "Grass Far"),
col = c("#009E73", "#E69500", "#D55E00", "#56B4E9", "#0072B2", "#CC6677", "#AA4499"), pch = 16, bty = "n",  cex = 0.8, inset = c(-0.357,0), xpd = TRUE)
with(Guilds_Environment, plot(Rel_Saprobe_Abundance ~ ABIOTIC_COMP2, col=my_colours[factor(Transect)], pch = 16, ylab = "Relative Saprobe Abundance", xlab = "ABIOTIC COMP 2"))
#Plot our mixed effects model with confidence estimates
plot.CI.func(x.for.plot = seq_func(Guilds_Environment$ABIOTIC_COMP2), pred = ABIOTIC_Predict_Saprobe$y,
upper = ABIOTIC_Predict_Saprobe$phi, lower=ABIOTIC_Predict_Saprobe$plo,
env.colour = "grey", env.trans=50, line.colour="black", line.weight=2, line.type=1)
legend("right", legend = c("Forest", "Forest Edge Interior", "Forest Edge Exterior", "Pioneer Near", "Pioneer Far", "Grass Near", "Grass Far"),
col = c("#009E73", "#E69500", "#D55E00", "#56B4E9", "#0072B2", "#CC6677", "#AA4499"), pch = 16, bty = "n",  cex = 0.8, inset = c(-0.357,0), xpd = TRUE)
dev.off()
#Endo
pdf(file = "Outputs/Figures/Endo_Environment.pdf")
par(mar = c(5.1,4.5,4.5,8.1))
#Distance
with(Guilds_Environment, plot(Rel_Endomycorrhizae_Abundance ~ Transformed_Distance, col=my_colours[factor(Transect)], pch = 16, ylab = "Relative Endomycorrhizae Abundance", xlab = "Transformed Distance From Forest Edge (m)"))
#Plot our mixed effects model with confidence estimates
plot.CI.func(x.for.plot = seq_func(Guilds_Environment$Transformed_Distance), pred = Distance_Predict_Endo$y,
upper = Distance_Predict_Endo$phi, lower=Distance_Predict_Endo$plo,
env.colour = "grey", env.trans=50, line.colour="black", line.weight=2, line.type=1)
legend("right", legend = c("Forest", "Forest Edge Interior", "Forest Edge Exterior", "Pioneer Near", "Pioneer Far", "Grass Near", "Grass Far"),
col = c("#009E73", "#E69500", "#D55E00", "#56B4E9", "#0072B2", "#CC6677", "#AA4499"), pch = 16, bty = "n",  cex = 0.8, inset = c(-0.357,0), xpd = TRUE)
#AGV
with(Guilds_Environment, plot(Rel_Endomycorrhizae_Abundance ~ AGV_COMP1, col=my_colours[factor(Transect)], pch = 16, ylab = "Relative Endomycorrhizae Abundance", xlab = "AGV COMP 1"))
#Plot our mixed effects model with confidence estimates
plot.CI.func(x.for.plot = seq_func(Guilds_Environment$AGV_COMP1), pred = AGV_Predict_Endo$y,
upper = AGV_Predict_Endo$phi, lower=AGV_Predict_Endo$plo,
env.colour = "grey", env.trans=50, line.colour="black", line.weight=2, line.type=1)
legend("right", legend = c("Forest", "Forest Edge Interior", "Forest Edge Exterior", "Pioneer Near", "Pioneer Far", "Grass Near", "Grass Far"),
col = c("#009E73", "#E69500", "#D55E00", "#56B4E9", "#0072B2", "#CC6677", "#AA4499"), pch = 16, bty = "n",  cex = 0.8, inset = c(-0.357,0), xpd = TRUE)
#SOIL
with(Guilds_Environment, plot(Rel_Endomycorrhizae_Abundance ~ SOIL_COMP1, col=my_colours[factor(Transect)], pch = 16, ylab = "Relative Endomycorrhizae Abundance", xlab = "SOIL COMP 1"))
#Plot our mixed effects model with confidence estimates
plot.CI.func(x.for.plot = seq_func(Guilds_Environment$SOIL_COMP1), pred = SOIL_Predict_Endo$y,
upper = SOIL_Predict_Endo$phi, lower=SOIL_Predict_Endo$plo,
env.colour = "grey", env.trans=50, line.colour="black", line.weight=2, line.type=1)
legend("right", legend = c("Forest", "Forest Edge Interior", "Forest Edge Exterior", "Pioneer Near", "Pioneer Far", "Grass Near", "Grass Far"),
col = c("#009E73", "#E69500", "#D55E00", "#56B4E9", "#0072B2", "#CC6677", "#AA4499"), pch = 16, bty = "n",  cex = 0.8, inset = c(-0.357,0), xpd = TRUE)
#LITTER
with(Guilds_Environment, plot(Rel_Endomycorrhizae_Abundance ~ LITTER_COMP1, col=my_colours[factor(Transect)], pch = 16, ylab = "Relative Endomycorrhizae Abundance", xlab = "LITTER COMP 1"))
#Plot our mixed effects model with confidence estimates
plot.CI.func(x.for.plot = seq_func(Guilds_Environment$LITTER_COMP1), pred = LITTER_Predict_Endo$y,
upper = LITTER_Predict_Endo$phi, lower=LITTER_Predict_Endo$plo,
env.colour = "grey", env.trans=50, line.colour="black", line.weight=2, line.type=1)
legend("right", legend = c("Forest", "Forest Edge Interior", "Forest Edge Exterior", "Pioneer Near", "Pioneer Far", "Grass Near", "Grass Far"),
col = c("#009E73", "#E69500", "#D55E00", "#56B4E9", "#0072B2", "#CC6677", "#AA4499"), pch = 16, bty = "n",  cex = 0.8, inset = c(-0.357,0), xpd = TRUE)
#ABIOTIC 1
with(Guilds_Environment, plot(Rel_Endomycorrhizae_Abundance ~ ABIOTIC_COMP1, col=my_colours[factor(Transect)], pch = 16, ylab = "Relative Endomycorrhizae Abundance", xlab = "ABIOTIC COMP 1"))
#Plot our mixed effects model with confidence estimates
plot.CI.func(x.for.plot = seq_func(Guilds_Environment$ABIOTIC_COMP1), pred = ABIOTIC_Predict_Endo$y,
upper = ABIOTIC_Predict_Endo$phi, lower=ABIOTIC_Predict_Endo$plo,
env.colour = "grey", env.trans=50, line.colour="black", line.weight=2, line.type=1)
legend("right", legend = c("Forest", "Forest Edge Interior", "Forest Edge Exterior", "Pioneer Near", "Pioneer Far", "Grass Near", "Grass Far"),
col = c("#009E73", "#E69500", "#D55E00", "#56B4E9", "#0072B2", "#CC6677", "#AA4499"), pch = 16, bty = "n",  cex = 0.8, inset = c(-0.357,0), xpd = TRUE)
#ABIOTIC 2
with(Guilds_Environment, plot(Rel_Endomycorrhizae_Abundance ~ ABIOTIC_COMP2, col=my_colours[factor(Transect)], pch = 16, ylab = "Relative Endomycorrhizae Abundance", xlab = "ABIOTIC COMP 2"))
#Plot our mixed effects model with confidence estimates
plot.CI.func(x.for.plot = seq_func(Guilds_Environment$ABIOTIC_COMP2), pred = ABIOTIC_Predict_Endo$y,
upper = ABIOTIC_Predict_Endo$phi, lower=ABIOTIC_Predict_Endo$plo,
env.colour = "grey", env.trans=50, line.colour="black", line.weight=2, line.type=1)
legend("right", legend = c("Forest", "Forest Edge Interior", "Forest Edge Exterior", "Pioneer Near", "Pioneer Far", "Grass Near", "Grass Far"),
col = c("#009E73", "#E69500", "#D55E00", "#56B4E9", "#0072B2", "#CC6677", "#AA4499"), pch = 16, bty = "n",  cex = 0.8, inset = c(-0.357,0), xpd = TRUE)
dev.off()
#Ecto
#Distance
pdf(file = "Outputs/Figures/Ecto_Environment.pdf")
par(mar = c(5.1,4.5,4.5,8.1))
with(Guilds_Environment, plot(Rel_Ectomycorrhizae_Abundance ~ Transformed_Distance, col=my_colours[factor(Transect)], pch = 16, ylab = "Relative Ectomycorrhizae Abundance", xlab = "Transformed Distance From Forest Edge (m)"))
#Plot our mixed effects model with confidence estimates
plot.CI.func(x.for.plot = seq_func(Guilds_Environment$Transformed_Distance), pred = Distance_Predict_Ecto$y,
upper = Distance_Predict_Ecto$phi, lower=Distance_Predict_Ecto$plo,
env.colour = "grey", env.trans=50, line.colour="black", line.weight=2, line.type=1)
legend("right", legend = c("Forest", "Forest Edge Interior", "Forest Edge Exterior", "Pioneer Near", "Pioneer Far", "Grass Near", "Grass Far"),
col = c("#009E73", "#E69500", "#D55E00", "#56B4E9", "#0072B2", "#CC6677", "#AA4499"), pch = 16, bty = "n",  cex = 0.8, inset = c(-0.357,0), xpd = TRUE)
#AGV
with(Guilds_Environment, plot(Rel_Ectomycorrhizae_Abundance ~ AGV_COMP1, col=my_colours[factor(Transect)], pch = 16, ylab = "Relative Ectomycorrhizae Abundance", xlab = "AGV COMP 1"))
#Plot our mixed effects model with confidence estimates
plot.CI.func(x.for.plot = seq_func(Guilds_Environment$AGV_COMP1), pred = AGV_Predict_Ecto$y,
upper = AGV_Predict_Ecto$phi, lower=AGV_Predict_Ecto$plo,
env.colour = "grey", env.trans=50, line.colour="black", line.weight=2, line.type=1)
legend("right", legend = c("Forest", "Forest Edge Interior", "Forest Edge Exterior", "Pioneer Near", "Pioneer Far", "Grass Near", "Grass Far"),
col = c("#009E73", "#E69500", "#D55E00", "#56B4E9", "#0072B2", "#CC6677", "#AA4499"), pch = 16, bty = "n",  cex = 0.8, inset = c(-0.357,0), xpd = TRUE)
#SOIL
with(Guilds_Environment, plot(Rel_Ectomycorrhizae_Abundance ~ SOIL_COMP1, col=my_colours[factor(Transect)], pch = 16, ylab = "Relative Ectomycorrhizae Abundance", xlab = "SOIL COMP 1"))
#Plot our mixed effects model with confidence estimates
plot.CI.func(x.for.plot = seq_func(Guilds_Environment$SOIL_COMP1), pred = SOIL_Predict_Ecto$y,
upper = SOIL_Predict_Ecto$phi, lower=SOIL_Predict_Ecto$plo,
env.colour = "grey", env.trans=50, line.colour="black", line.weight=2, line.type=1)
legend("right", legend = c("Forest", "Forest Edge Interior", "Forest Edge Exterior", "Pioneer Near", "Pioneer Far", "Grass Near", "Grass Far"),
col = c("#009E73", "#E69500", "#D55E00", "#56B4E9", "#0072B2", "#CC6677", "#AA4499"), pch = 16, bty = "n",  cex = 0.8, inset = c(-0.357,0), xpd = TRUE)
#LITTER
with(Guilds_Environment, plot(Rel_Ectomycorrhizae_Abundance ~ LITTER_COMP1, col=my_colours[factor(Transect)], pch = 16, ylab = "Relative Ectomycorrhizae Abundance", xlab = "LITTER COMP 1"))
#Plot our mixed effects model with confidence estimates
plot.CI.func(x.for.plot = seq_func(Guilds_Environment$LITTER_COMP1), pred = LITTER_Predict_Ecto$y,
upper = LITTER_Predict_Ecto$phi, lower=LITTER_Predict_Ecto$plo,
env.colour = "grey", env.trans=50, line.colour="black", line.weight=2, line.type=1)
legend("right", legend = c("Forest", "Forest Edge Interior", "Forest Edge Exterior", "Pioneer Near", "Pioneer Far", "Grass Near", "Grass Far"),
col = c("#009E73", "#E69500", "#D55E00", "#56B4E9", "#0072B2", "#CC6677", "#AA4499"), pch = 16, bty = "n",  cex = 0.8, inset = c(-0.357,0), xpd = TRUE)
#ABIOTIC1
with(Guilds_Environment, plot(Rel_Ectomycorrhizae_Abundance ~ ABIOTIC_COMP1, col=my_colours[factor(Transect)], pch = 16, ylab = "Relative Ectomycorrhizae Abundance", xlab = "ABIOTIC COMP 1"))
plot.CI.func(x.for.plot = seq_func(Guilds_Environment$ABIOTIC_COMP1), pred = ABIOTIC_Predict_Ecto$y,
upper = ABIOTIC_Predict_Ecto$phi, lower=ABIOTIC_Predict_Ecto$plo,
env.colour = "grey", env.trans=50, line.colour="black", line.weight=2, line.type=1)
legend("right", legend = c("Forest", "Forest Edge Interior", "Forest Edge Exterior", "Pioneer Near", "Pioneer Far", "Grass Near", "Grass Far"),
col = c("#009E73", "#E69500", "#D55E00", "#56B4E9", "#0072B2", "#CC6677", "#AA4499"), pch = 16, bty = "n",  cex = 0.8, inset = c(-0.357,0), xpd = TRUE)
#ABIOTIC2
with(Guilds_Environment, plot(Rel_Ectomycorrhizae_Abundance ~ ABIOTIC_COMP2, col=my_colours[factor(Transect)], pch = 16, ylab = "Relative Ectomycorrhizae Abundance", xlab = "ABIOTIC COMP 2"))
#Plot our mixed effects model with confidence estimates
plot.CI.func(x.for.plot = seq_func(Guilds_Environment$ABIOTIC_COMP2), pred = ABIOTIC_Predict_Ecto$y,
upper = ABIOTIC_Predict_Ecto$phi, lower=ABIOTIC_Predict_Ecto$plo,
env.colour = "grey", env.trans=50, line.colour="black", line.weight=2, line.type=1)
legend("right", legend = c("Forest", "Forest Edge Interior", "Forest Edge Exterior", "Pioneer Near", "Pioneer Far", "Grass Near", "Grass Far"),
col = c("#009E73", "#E69500", "#D55E00", "#56B4E9", "#0072B2", "#CC6677", "#AA4499"), pch = 16, bty = "n",  cex = 0.8, inset = c(-0.357,0), xpd = TRUE)
dev.off()
#Plant Pathogens
pdf(file = "Outputs/Figures/Path_Environment.pdf")
par(mar = c(5.1,4.5,4.5,8.1))
#Distance
with(Guilds_Environment, plot(Rel_Plant_Pathogen_Abundance ~ Transformed_Distance, col=my_colours[factor(Transect)], pch = 16, ylab = "Relative Pathmycorrhizae Abundance", xlab = "Transformed Distance From Edge (m)"))
#Plot our mixed effects model with confidence estimates
plot.CI.func(x.for.plot = seq_func(Guilds_Environment$Transformed_Distance), pred = Distance_Predict_Path$y,
upper = Distance_Predict_Path$phi, lower=Distance_Predict_Path$plo,
env.colour = "grey", env.trans=50, line.colour="black", line.weight=2, line.type=1)
legend("right", legend = c("Forest", "Forest Edge Interior", "Forest Edge Exterior", "Pioneer Near", "Pioneer Far", "Grass Near", "Grass Far"),
col = c("#009E73", "#E69500", "#D55E00", "#56B4E9", "#0072B2", "#CC6677", "#AA4499"), pch = 16, bty = "n",  cex = 0.8, inset = c(-0.357,0), xpd = TRUE)
#AGV
with(Guilds_Environment, plot(Rel_Plant_Pathogen_Abundance ~ AGV_COMP1, col=my_colours[factor(Transect)], pch = 16, ylab = "Relative Pathmycorrhizae Abundance", xlab = "AGV COMP 1"))
#Plot our mixed effects model with confidence estimates
plot.CI.func(x.for.plot = seq_func(Guilds_Environment$AGV_COMP1), pred = AGV_Predict_Path$y,
upper = AGV_Predict_Path$phi, lower=AGV_Predict_Path$plo,
env.colour = "grey", env.trans=50, line.colour="black", line.weight=2, line.type=1)
legend("right", legend = c("Forest", "Forest Edge Interior", "Forest Edge Exterior", "Pioneer Near", "Pioneer Far", "Grass Near", "Grass Far"),
col = c("#009E73", "#E69500", "#D55E00", "#56B4E9", "#0072B2", "#CC6677", "#AA4499"), pch = 16, bty = "n",  cex = 0.8, inset = c(-0.357,0), xpd = TRUE)
#SOIL
with(Guilds_Environment, plot(Rel_Plant_Pathogen_Abundance ~ SOIL_COMP1, col=my_colours[factor(Transect)], pch = 16, ylab = "Relative Pathmycorrhizae Abundance", xlab = "SOIL COMP 1"))
#Plot our mixed effects model with confidence estimates
plot.CI.func(x.for.plot = seq_func(Guilds_Environment$SOIL_COMP1), pred = SOIL_Predict_Path$y,
upper = SOIL_Predict_Path$phi, lower=SOIL_Predict_Path$plo,
env.colour = "grey", env.trans=50, line.colour="black", line.weight=2, line.type=1)
legend("right", legend = c("Forest", "Forest Edge Interior", "Forest Edge Exterior", "Pioneer Near", "Pioneer Far", "Grass Near", "Grass Far"),
col = c("#009E73", "#E69500", "#D55E00", "#56B4E9", "#0072B2", "#CC6677", "#AA4499"), pch = 16, bty = "n",  cex = 0.8, inset = c(-0.357,0), xpd = TRUE)
#LITTER
with(Guilds_Environment, plot(Rel_Plant_Pathogen_Abundance ~ LITTER_COMP1, col=my_colours[factor(Transect)], pch = 16, ylab = "Relative Pathmycorrhizae Abundance", xlab = "LITTER COMP 1"))
#Plot our mixed effects model with confidence estimates
plot.CI.func(x.for.plot = seq_func(Guilds_Environment$LITTER_COMP1), pred = LITTER_Predict_Path$y,
upper = LITTER_Predict_Path$phi, lower=LITTER_Predict_Path$plo,
env.colour = "grey", env.trans=50, line.colour="black", line.weight=2, line.type=1)
legend("right", legend = c("Forest", "Forest Edge Interior", "Forest Edge Exterior", "Pioneer Near", "Pioneer Far", "Grass Near", "Grass Far"),
col = c("#009E73", "#E69500", "#D55E00", "#56B4E9", "#0072B2", "#CC6677", "#AA4499"), pch = 16, bty = "n",  cex = 0.8, inset = c(-0.357,0), xpd = TRUE)
#ABIOTIC1
with(Guilds_Environment, plot(Rel_Plant_Pathogen_Abundance ~ ABIOTIC_COMP1, col=my_colours[factor(Transect)], pch = 16, ylab = "Relative Pathmycorrhizae Abundance", xlab = "ABIOTIC COMP 1"))
#Plot our mixed effects model with confidence estimates
plot.CI.func(x.for.plot = seq_func(Guilds_Environment$ABIOTIC_COMP1), pred = ABIOTIC_Predict_Path$y,
upper = ABIOTIC_Predict_Path$phi, lower=ABIOTIC_Predict_Path$plo,
env.colour = "grey", env.trans=50, line.colour="black", line.weight=2, line.type=1)
legend("right", legend = c("Forest", "Forest Edge Interior", "Forest Edge Exterior", "Pioneer Near", "Pioneer Far", "Grass Near", "Grass Far"),
col = c("#009E73", "#E69500", "#D55E00", "#56B4E9", "#0072B2", "#CC6677", "#AA4499"), pch = 16, bty = "n",  cex = 0.8, inset = c(-0.357,0), xpd = TRUE)
#ABIOTIC2
with(Guilds_Environment, plot(Rel_Plant_Pathogen_Abundance ~ ABIOTIC_COMP2, col=my_colours[factor(Transect)], pch = 16, ylab = "Relative Pathmycorrhizae Abundance", xlab = "ABIOTIC COMP 2"))
#Plot our mixed effects model with confidence estimates
plot.CI.func(x.for.plot = seq_func(Guilds_Environment$ABIOTIC_COMP2), pred = ABIOTIC_Predict_Path$y,
upper = ABIOTIC_Predict_Path$phi, lower=ABIOTIC_Predict_Path$plo,
env.colour = "grey", env.trans=50, line.colour="black", line.weight=2, line.type=1)
legend("right", legend = c("Forest", "Forest Edge Interior", "Forest Edge Exterior", "Pioneer Near", "Pioneer Far", "Grass Near", "Grass Far"),
col = c("#009E73", "#E69500", "#D55E00", "#56B4E9", "#0072B2", "#CC6677", "#AA4499"), pch = 16, bty = "n",  cex = 0.8, inset = c(-0.357,0), xpd = TRUE)
dev.off()
#Call Model Summary
summary(Saprobe_Distance)
#Assess the proportion of variance explained by Explanatory Variable
r.squaredGLMM(Saprobe_Distance)
#Call Model Summary
summary(Endo_Distance)
#Call Model Summary
summary(Ecto_Distance)
#Call Model Summary
summary(Path_Distance)
#Call Model Summary
summary(Saprobe_AGV)
#Call Model Summary
summary(Endo_AGV)
#Call Model Summary
summary(Ecto_AGV)
#Call Model Summary
summary(Path_AGV)
#Call Model Summary
summary(Saprobe_SOIL)
with(Guilds_Environment, plot(Rel_Saprobe_Abundance ~ Transformed_Distance, col=my_colours[factor(Transect)], pch = 16, ylab = "Relative Saprobe Abundance", xlab = "Transformed Distance From Forest Edge (m)"))
#Plot our mixed effects model with confidence estimates
plot.CI.func(x.for.plot = seq_func(Guilds_Environment$Transformed_Distance), pred = Distance_Predict_Saprobe$y,
upper = Distance_Predict_Saprobe$phi, lower=Distance_Predict_Saprobe$plo,
env.colour = "grey", env.trans=50, line.colour="black", line.weight=2, line.type=1)
legend("right", legend = c("Forest", "Forest Edge Interior", "Forest Edge Exterior", "Pioneer Near", "Pioneer Far", "Grass Near", "Grass Far"),
col = c("#009E73", "#E69500", "#D55E00", "#56B4E9", "#0072B2", "#CC6677", "#AA4499"), pch = 16, bty = "n", cex = 0.8, inset = c(-0.3535,0), xpd = TRUE)
par(mfrow = (1,1))
#Call Model Summary
summary(Saprobe_Distance)
#Assess the proportion of variance explained by Explanatory Variable
r.squaredGLMM(Saprobe_Distance)
#Call Model Summary
summary(Endo_Distance)
#Call Model Summary
summary(Endo_Distance)
#Assess the proportion of variance explained by Explanatory Variable
r.squaredGLMM(Saprobe_Distance)
#Endo
Endo_Distance <- lmer(Rel_Endomycorrhizae_Abundance ~ Transformed_Distance + (1|Transect), data = Guilds_Environment)
#Call Model Summary
summary(Endo_Distance)
#Assess the proportion of variance explained by Explatory Variable
r.squaredGLMM(Endo_Distance)
#Call Model Summary
summary(Ecto_Distance)
#Assess the proportion of variance explained by Exploratory Variable
r.squaredGLMM(Ecto_Distance)
#Call Model Summary
summary(Path_Distance)
#Assess the proportion of variance explained by Exploratory Variable
r.squaredGLMM(Path_Distance)
#Call Model Summary
summary(Saprobe_AGV)
#Call Model Summary
summary(Endo_AGV)
#Call Model Summary
summary(Saprobe_AGV)
#Assess the proportion of variance explained by Explanatory Variable
r.squaredGLMM(Saprobe_AGV)
#Call Model Summary
summary(Endo_AGV)
#Assess the proportion of variance explained by Explatory Variable
r.squaredGLMM(Endo_AGV)
#Call Model Summary
summary(Ecto_AGV)
#Assess the proportion of variance explained by Exploratory Variable
r.squaredGLMM(Ecto_AGV)
#Call Model Summary
summary(Path_AGV)
#Assess the proportion of variance explained by Exploratory Variable
r.squaredGLMM(Path_AGV)
#Call Model Summary
summary(Saprobe_SOIL)
#Assess the proportion of variance explained by Explanatory Variable
r.squaredGLMM(Saprobe_SOIL)
#Call Model Summary
summary(Endo_SOIL)
#Assess the proportion of variance explained by Explatory Variable
r.squaredGLMM(Endo_SOIL)
#Call Model Summary
summary(Ecto_SOIL)
#Assess the proportion of variance explained by Exploratory Variable
r.squaredGLMM(Ecto_SOIL)
#Call Model Summary
summary(Path_Soil)
#Assess the proportion of variance explained by Exploratory Variable
r.squaredGLMM(Path_Soil)
#Call Model Summary
summary(Saprobe_LITTER)
#Assess the proportion of variance explained by Explanatory Variable
r.squaredGLMM(Saprobe_LITTER)
#Call Model Summary
summary(Endo_LITTER)
#Assess the proportion of variance explained by Explatory Variable
r.squaredGLMM(Endo_LITTER)
#Call Model Summary
summary(Ecto_LITTER)
#Assess the proportion of variance explained by Exploratory Variable
r.squaredGLMM(Ecto_LITTER)
#Call Model Summary
summary(Path_LITTER)
#Assess the proportion of variance explained by Exploratory Variable
r.squaredGLMM(Path_LITTER)
#Call Model Summary
summary(Saprobe_ABIOTIC1)
#Assess the proportion of variance explained by Explanatory Variable
r.squaredGLMM(Saprobe_ABIOTIC1)
#Call Model Summary
summary(Endo_ABIOTIC1)
#Assess the proportion of variance explained by Explatory Variable
r.squaredGLMM(Endo_ABIOTIC1)
#Call Model Summary
summary(Ecto_ABIOTIC1)
#Assess the proportion of variance explained by Exploratory Variable
r.squaredGLMM(Ecto_ABIOTIC1)
#Call Model Summary
summary(Path_ABIOTIC1)
#Assess the proportion of variance explained by Exploratory Variable
r.squaredGLMM(Path_ABIOTIC1)
#Call Model Summary
summary(Saprobe_ABIOTIC2)
#Assess the proportion of variance explained by Explanatory Variable
r.squaredGLMM(Saprobe_ABIOTIC2)
#Call Model Summary
summary(Endo_ABIOTIC2)
#Assess the proportion of variance explained by Explatory Variable
r.squaredGLMM(Endo_ABIOTIC2)
#Call Model Summary
summary(Ecto_ABIOTIC2)
#Assess the proportion of variance explained by Exploratory Variable
r.squaredGLMM(Ecto_ABIOTIC2)
#Call Model Summary
summary(Path_ABIOTIC2)
#Assess the proportion of variance explained by Exploratory Variable
r.squaredGLMM(Path_ABIOTIC2)
with(Guilds_Environment, plot(Rel_Ectomycorrhizae_Abundance ~ SOIL_COMP1, col=my_colours[factor(Transect)], pch = 16, ylab = "Relative Ectomycorrhizae Abundance", xlab = "SOIL COMP 1"))
par(mfrow = (1,1))
rm(list=ls())
#First three lines are to fix recurring error in mac
library(showtext)
font_add(family = "Arial", regular = "Arial.ttf") ## here is the path to the font to add.
showtext.auto()
library(ggplot2)
library(tidyverse)
library(dplyr)
library(cowplot)
library(Polychrome)
library(stringr)
#define colours for plots
my_colours <- c("#848482", "#875692", "#F38400", "#A1CAF1", "#BE0032",  "#C2B280","#FFCCFF", "#008856", "#E68FAC", "#0067A5","#F99379", "604E97", "#F6A600", "#B3446C", "#DCD300", "#882D17", "#8DB600", "#654522", "#E25822", "#2B3D26", "#000000")
swatch(my_colours)
